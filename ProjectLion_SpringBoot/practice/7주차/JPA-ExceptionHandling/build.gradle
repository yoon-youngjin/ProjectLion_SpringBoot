plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'dev.yoon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring-boot-actuator
    // /actuator path가 기본으로 하나 생성
    // http://localhost:8080/actuator
    // http://localhost:8080/actuator/headth: 헬스케어-> UP -> 사용자의 요청을 받을 수 있는 상태
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly('io.micrometer:micrometer-registry-prometheus')


    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation ('org.junit.vintage:junit-vintage-engine') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }


}

tasks.named('test') {
    useJUnitPlatform()
}
